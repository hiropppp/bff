name: ECR Push test

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        description: releaseする？
        default: false

env:
  IMAGE_TAG: ${{ github.sha }}

permissions:
  id-token: write
  contents: read

jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Show git status
        run: git status

      - name: Show git branch
        run: git branch

      - name: Show inputs
        run: |
          echo "release: ${{ github.event.inputs.release }}"

      - name: set release image tag
        if: ${{ github.event.inputs.release == 'true' }} 
        run: |
          echo "IMAGE_TAG=release-${{ github.sha }}" >> $GITHUB_ENV

      - name: Show image tag
        run: |
          echo "IMAGE_TAG: ${{ env.IMAGE_TAG }}"

      - name: Show exec branch
        run: |
          echo ${GITHUB_REF##*/}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: "ap-northeast-1"
          role-duration-seconds: 900
          role-session-name: GitHubActionsTestSession

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./docker/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  slack-notify:
    if: always()
    needs: [ build ]
    name: workflow notification to slack
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          icon_emoji: ':octocat:'
